
      *************************************************************
      * IcoSoC -- A PicoRV32-based SoC generator for the IcoBoard *
      *************************************************************


The IcoBoard is a Raspberry PI hat featuring the ICE40 HX8K fpga. It
can be programmed using the IceStorm Open Source FPGA flow:

http://icoboard.org/
http://www.clifford.at/icestorm/

This SoC generator creates SoCs using the PicoRV32 processor core that run on
the IcoBoard. Multiple IO standard interfaces are supported. The SoC has a
console interface to the Raspberry Pi. (Run "icoprog -zZc2" on the Raspberry
Pi to connect to the console. Note that the SoC stops when the console output
buffer is full.)

It is certainly possible to run the entire toolchain (including SoC generation)
on the Raspberry Pi, but for this manual we assume that the SoC generation
happens on a separate workstation and only "icoprog" is run directly on the
Raspberry Pi.

The generated makefiles assume that the Raspberry Pi can be connected to with
"ssh pi@raspi" without password authentication (i.e. authentication using SSH
keys). Note that "ssh pi@raspi" must connect to the Raspberry Pi within a few
seconds, otherwise the SoC bootloader will timeout between programming the
FPGA and uploading the application image.

Simply change into one of the examples/* directories and run "make run" to
build and upload a SoC hardware/software bundle. You'll need the iCE40 and
RISC-V toolchains installed on your system, as outlined below.


Installing the IceStorm Flow
----------------------------

Installing Prerequisites:

	sudo apt-get install build-essential clang bison flex libreadline-dev \
	                     gawk tcl-dev libffi-dev git mercurial graphviz   \
	                     xdot pkg-config python python3 libftdi-dev

Installing IceStorm:

	cd $HOME
	git clone https://github.com/cliffordwolf/icestorm.git icestorm
	cd icestorm && make && sudo make install

Installing Arachne-pnr:

	cd $HOME
	git clone https://github.com/cseed/arachne-pnr.git arachne-pnr
	cd arachne-pnr && make && sudo make install

Installing Yosys:

	cd $HOME
	git clone https://github.com/cliffordwolf/yosys.git yosys
	cd yosys && make && sudo make install


Installing the RISC-V Toolchain
-------------------------------

Installing Prerequisites:

	sudo apt-get install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev \
	                     libgmp-dev gawk build-essential bison flex texinfo gperf

Installing RISC-V Toolchain:

	sudo mkdir /opt/riscv32i
	sudo chown $USER /opt/riscv32i

	cd $HOME
	git clone https://github.com/riscv/riscv-gnu-toolchain riscv-gnu-toolchain-rv32i
	cd riscv-gnu-toolchain-rv32i
	git checkout 06c957a

	mkdir build; cd build
	../configure --with-xlen=32 --with-arch=I --prefix=/opt/riscv32i
	make

Adding RISC-V Toolchain to $PATH:

	echo 'export PATH="$PATH:/opt/riscv32i/bin"' >> $HOME/.bash_aliases
	source $HOME/.bash_aliases

